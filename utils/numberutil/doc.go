// Package numberutil
// numberutil 包用于封装数值类型的辅助函数
package numberutil

/*
标准包中以下类型是不限大小的，只限于机器的内存
- big.Int
- big.Rat

go 提供了大量内置的数值类型，但不同数值类型之间不能进行数值运算和比较操作，若有需要，必须进行类型转换，通常将类型转换成最大类型以防止精度丢失，类型转换使用 Type(value) 的形式，即可转换（大类型转小类型，会丢失精度或丢失数据）

package 主要包含以下方法:
- 精度范围内的数值转换



go 整数类型&范围

------------------------------------------------------------------------------
 类型     | 取值范围                                                            |
------------------------------------------------------------------------------
 byte    | 等同于 uint8
 int     | 依赖不同平台，32位系统：int32；64 位系统 int64
 int8    | [-128, 127] [(-2)^(8-1), 2^(8-1)-1]
 int16   | [-32768, 32767]
 int32   | [-2147483648, 2147483647]  负21亿多到正21亿多
 int64   | [(-2)^(64-1), 2^(64-1)-1]
 rune    | 等同于 int32
 uint    | 依赖不同平台，32位系统：uint32；64 位系统 uint64
 uint8   | [0, 256] [0, 2^8]
 uint16  | [0, 65535] [0, 2^16]
 uint32  | [0, 4294967295]  0到正42亿多
 uint64  | [0, 2^64]
 uintptr | 一个可以恰好容纳指针值的无符合整数类型（32位系统：uint32; 64 位系统：uint64）
------------------------------------------------------------------------------

float 表示的是近似值，用它们来做相等或不相等比较时并不总能得到预期结果

------------------------------------------------------------------------------
 类型       | 取值范围                                                            |
------------------------------------------------------------------------------
 float32    | 尾数部分计算精度大概是 7 个十进制数
 float64    | 尾数部分计算精度大概是 15 个十进制数
 complex64  | 实部和虚部都是一个 float32
 complex128 | 实部和虚部都是一个 float64
------------------------------------------------------------------------------
*/
